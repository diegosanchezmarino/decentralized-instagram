{"version":3,"sources":["components/Navbar/Navbar.styled.js","components/Navbar/MainButton/MainButton.styled.js","components/Navbar/MainButton/MainButton.js","components/Navbar/AccountInfo/AccountInfo.styled.js","components/Navbar/AccountInfo/AccountInfo.js","components/PostsMainView/NewPostButton/NewPostButton.styled.js","components/PostsMainView/NewPostButton/NewPostButton.js","components/Navbar/Navbar.js","utilities/helpers/BlockchainConnectionManager.js","App.styled.js","components/ConnectView/ConnectView.styled.js","components/ConnectView/ConnectView.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/PostsMainView/PostsMainView.styled.js","components/PostsMainView/Information/Information.styled.js","components/PostsMainView/Information/Information.js","components/PostsMainView/PostList/PostList.styled.js","components/PostsMainView/Post/Post.styled.js","components/PostsMainView/Post/Post.js","components/PostsMainView/LoadMoreButton/LoadMoreButton.styled.js","components/PostsMainView/LoadMoreButton/LoadMoreButton.js","components/PostsMainView/PostList/PostList.js","components/PostsMainView/PostsMainView.js","utilities/helpers/Parser.js","App.js","serviceWorker.js","index.js","assets/logo.png","api/IPFSApi.js","utilities/helpers/PostLoader.js","assets/new_post_icon.svg","components/Modal/ShareModal.js","assets/images_icon.svg","assets/paid_black_24dp.svg","components/Modal/view/SelectImageView/SelectImageView.styled.js","components/Modal/view/SelectImageView/SelectImageView.js","components/Modal/view/AddDescriptionView/AddDescriptionView.styled.js","components/Modal/view/AddDescriptionView/AddDescriptionView.js","components/Modal/view/WaitingForTransactionView/WaitingForTransactionView.styled.js","components/Modal/view/WaitingForTransactionView/WaitingForTransactionView.js","api/BlockchainApi.js","utilities/Constants.js"],"names":["StyledNavBar","styled","div","_templateObject","Object","taggedTemplateLiteral","RightStack","_templateObject2","StyledMainButton","button","MainButton_styled_templateObject","MainButton","props","state","metamaskStatus","MetamaskStatus","NotInstalled","WrongNetwork","react_default","a","createElement","onClick","switchNetwork","NotConnected","connectWallet","onClickAction","getContent","StyledAccountInfo","AccountInfo_styled_templateObject","AccountInfo","Ready","account","alt","src","concat","Identicon","toString","substring","length","StyledNewPostButton","img","NewPostButton_styled_templateObject","NewPostButton","console","log","newPostIcon","Navbar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isModalVisible","setModalState","bind","assertThisInitialized","setState","_this2","logo","ShareModal","show","Component","BlockchainConnectionManager","updateState","checkMetamask","detectEthereumProvider","provider","checkNetwork","isMetamaskInstalled","window","ethereum","request","method","then","result","chainIdDecimal","parseInt","Constants","checkConnection","catch","error","on","loadAccount","err","code","params","chainId","_context7","t0","rpcUrl","StyledApp","App_styled_templateObject","StyledConnectView","ConnectView_styled_templateObject","MainImage","ConnectView_styled_templateObject2","Connect","_templateObject3","ConnectView","getInformation","handleButtonClick","getButtonText","StyledLoader","Loader_styled_templateObject","Wheel","Loader_styled_templateObject2","Text","Loader_styled_templateObject3","Loader","visible","StyledPostsMainView","PostsMainView_styled_templateObject","StyledInformation","Information_styled_templateObject","Information","StyledPostList","PostList_styled_templateObject","StyledPost","Post_styled_templateObject","Header","Post_styled_templateObject2","Post_styled_templateObject3","Footer","_templateObject4","Actions","_templateObject5","TipButton","_templateObject6","Description","p","_templateObject7","TipsInformation","_templateObject8","Post","tipAmount","Web3","utils","toWei","tipPostOwner","post","id","author","Post_styled_MainImage","hash","payIcon","event","tip","description","fromWei","StyledLoadMoreButton","LoadMoreButton_styled_templateObject","LoadMoreButton","isLoading","loadMorePosts","PostList","getRender","posts","map","key","PostsMainView_Post_Post","morePostsAvailable","PostsMainView","postCreatedEvents","postTippedEvents","prevProps","getPostCreatedSubscriptionEvent","newPostEvent","newPost","returnValues","isVideo","parseNewPostEvent","find","toConsumableArray","getPostTippedSubscriptionEvent","newPostTippedEvent","newPostTipped","parseNewPostTippedEvent","postIndex","findIndex","_ref","slice","objectSpread","unsubscribe","success","_this3","loadPosts","updateNewPosts","newPosts","PostsMainView_PostList_PostList","Idle","App","blockchainConnectionManager","validate","newState","components_Navbar_Navbar","notifications","components_ConnectView_ConnectView","components_PostsMainView_PostsMainView","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","ipfs","require","ipfsClient","host","port","protocol","uploadResource","_x","_uploadResource","apply","arguments","_callee","resource","regenerator_default","wrap","_context","prev","next","add","sent","abrupt","stop","latestLoadedPost","_loadPosts","postCount","postArray","postsSuccesfullyLoaded","i","getPostCount","getPostById","Error","push","createPost","_x2","_x3","_createPost","_callee2","imageBuffer","imageHash","_context2","createContractPost","ModalStatus","ImageSelected","DescriptionReady","WaitingForMetamask","_Users_diegosm_Documents_decentralized_instagram_reactApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_diegosm_Documents_decentralized_instagram_reactApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_diegosm_Documents_decentralized_instagram_reactApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","buffer","captureFile","preventDefault","file","target","files","imagePreview","URL","createObjectURL","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","status","title","upload","_Users_diegosm_Documents_decentralized_instagram_reactApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onModalHide","react__WEBPACK_IMPORTED_MODULE_6___default","react_bootstrap_Modal__WEBPACK_IMPORTED_MODULE_7__","onHide","size","aria-labelledby","centered","getScreen","_view_SelectImageView_SelectImageView__WEBPACK_IMPORTED_MODULE_9__","_view_AddDescriptionView_AddDescriptionView__WEBPACK_IMPORTED_MODULE_10__","_view_WaitingForTransactionView_WaitingForTransactionView__WEBPACK_IMPORTED_MODULE_11__","StyledSelectImageView","Title","Image","Button","SelectImageView","imagesIcon","ref","input","inputElement","type","accept","style","display","onChange","click","StyledAddDescriptionView","Body","AddDescriptionView","handleChange","value","StyledWaitingForTransactionView","WaitingForTransactionView","mainContract","eth","Contract","Decentragram","abi","events","PostTipped","PostCreated","_getPostById","_Users_diegosm_Documents_decentralized_instagram_reactApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","methods","_getPostCount","_x4","_createContractPost","_callee3","_context3","Promise","resolve","reject","send","from","transactionHash","_x5","_x6","_x7","_tipPostOwner","_callee4","tipResult","_context4","d","__webpack_exports__","DecentragramContractAddress","ChainId","ChainIdHexa","DecentragramContractAddressRopsten"],"mappings":"sPAEaA,EAAeC,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,+TAkBZE,EAAaL,IAAOC,IAAVK,MAAAH,OAAAC,EAAA,EAAAD,CAAA,8HCnBVI,EAAmBP,IAAOQ,OAAVC,MAAAN,OAAAC,EAAA,EAAAD,CAAA,qSCGd,SAASO,EAAWC,GAG/B,OAAIA,EAAMC,MAAMC,iBAAmBC,GAAeC,cAAgBJ,EAAMC,MAAMC,iBAAmBC,GAAeE,aAExGC,EAAAC,EAAAC,cAACZ,EAAD,CAAkBa,QAAS,kBAmBnC,SAAuBT,GACfA,EAAMC,MAAMC,iBAAmBC,GAAeE,aAC9CL,EAAMU,gBAEDV,EAAMC,MAAMC,iBAAmBC,GAAeQ,cACnDX,EAAMY,gBAxB2BC,CAAcb,KAUvD,WACI,GAAIA,EAAMC,MAAMC,iBAAmBC,GAAeC,aAC9C,MAAO,UAEN,GAAIJ,EAAMC,MAAMC,iBAAmBC,GAAeE,aACnD,MAAO,iBAdFS,CAAWd,EAAMC,MAAMC,iBAKxB,KCbT,MAAMa,EAAoB1B,IAAOC,IAAV0B,MAAAxB,OAAAC,EAAA,EAAAD,CAAA,ySCKf,SAASyB,EAAYjB,GAEhC,OAAIA,EAAMC,MAAMC,iBAAmBC,GAAee,OAASlB,EAAMC,MAAMkB,QAE/Db,EAAAC,EAAAC,cAACO,EAAD,KACIT,EAAAC,EAAAC,cAAA,OAAKY,IAAK,eAAgBC,IAAG,yBAAAC,OAA2B,IAAIC,IAAUvB,EAAMC,MAAMkB,QAAS,IAAIK,cAC/FlB,EAAAC,EAAAC,cAAA,SAAIR,EAAMC,MAAMkB,QAAQM,UAAU,EAAG,GAAK,MAAQzB,EAAMC,MAAMkB,QAAQM,UAAUzB,EAAMC,MAAMkB,QAAQO,OAAS,KAI7G,KCfT,IAAMC,EAAsBtC,IAAOuC,IAAVC,MAAArC,OAAAC,EAAA,EAAAD,CAAA,yICGjB,SAASsC,EAAc9B,GAElC,OAAIA,EAAMC,MAAMC,iBAAmBC,GAAee,OAC9Ca,QAAQC,IAAI,sBAAuBhC,GAE/BM,EAAAC,EAAAC,cAACmB,EAAD,CAAqBN,IAAKY,IAAaxB,QAAS,kBAAMT,EAAMS,eAIhEsB,QAAQC,IAAI,qBAAsBhC,GAC3B,iCCkCAkC,cApCb,SAAAA,EAAYlC,GAAO,IAAAmC,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAA6C,KAAAH,IACjBC,EAAA3C,OAAA8C,EAAA,EAAA9C,CAAA6C,KAAA7C,OAAA+C,EAAA,EAAA/C,CAAA0C,GAAAM,KAAAH,KAAMrC,KACDC,MAAQ,CACXwC,gBAAgB,GAGlBN,EAAKO,cAAgBP,EAAKO,cAAcC,KAAnBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA2C,KANJA,6EASLM,GACZJ,KAAKQ,SAAS,CAAEJ,oDAIT,IAAAK,EAAAT,KACP,OAAIA,KAAKrC,MAAMC,MAAMC,iBAAmBC,GAAee,MAEnDZ,EAAAC,EAAAC,cAACpB,EAAD,KACEkB,EAAAC,EAAAC,cAAA,OAAKY,IAAK,OAAQC,IAAK0B,MACvBzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAY/C,MAAOoC,KAAKrC,MAAMC,MAAOgD,KAAMZ,KAAKpC,MAAMwC,eAAgBC,cAAeL,KAAKK,gBAC1FpC,EAAAC,EAAAC,cAACd,EAAD,KACEY,EAAAC,EAAAC,cAACsB,EAAD,CAAe7B,MAAOoC,KAAKrC,MAAMC,MAAOQ,QAAS,WAAQqC,EAAKJ,eAAc,MAC5EpC,EAAAC,EAAAC,cAACT,EAAD,CAAYE,MAAOoC,KAAKrC,MAAMC,MAAOS,cAAe2B,KAAKrC,MAAMU,gBAC/DJ,EAAAC,EAAAC,cAACS,EAAD,CAAahB,MAAOoC,KAAKrC,MAAMC,UAO9B,YAjCQiD,uCCJAC,aAGjB,SAAAA,EAAYC,GAAc5D,OAAA4C,EAAA,EAAA5C,CAAA6C,KAAAc,GACtBd,KAAKe,YAAcA,iKAKnBf,KAAKgB,kRAOiBC,aAAtBjB,KAAKkB,gBACDlB,KAAKkB,UACLxB,QAAQC,IAAI,yBAEZK,KAAKmB,iBAELnB,KAAKe,YAAY,CAAEK,oBAAqBtD,GAAeC,eACvD2B,QAAQC,IAAI,uSAOV0B,OAAOC,SAASC,QAAQ,CAAEC,OAAQ,gBAAiBC,KAAK,SAACC,GAC3D,IAAMC,EAAiBC,SAASF,EAAQ,IACxChC,QAAQC,IAAI,qBAAuB+B,EAAS,KAAOC,EAAiB,KAChEA,IAAmBE,IACnB/B,EAAKiB,YAAY,CAAElD,eAAgBC,GAAeE,eAGlD8B,EAAKgC,oBAEVC,MAAM,SAACC,GACNtC,QAAQC,IAAIqC,YAGhBX,OAAOC,SAASW,GAAG,eAAgB,SAACP,GAChC,IAAMC,EAAiBC,SAASF,EAAQ,IACxChC,QAAQC,IAAI,gCAAkCgC,GAC1CA,IAAmBE,IACnB/B,EAAKgC,kBAGLhC,EAAKiB,YAAY,CAAElD,eAAgBC,GAAeE,2RAOpDqD,OAAOC,SACRC,QAAQ,CAAEC,OAAQ,iBAClBC,KAAK,SAACC,GAEmB,IAAlBA,EAAOrC,QACPK,QAAQC,IAAI,6BAEZc,EAAKM,YAAY,CAAElD,eAAgBC,GAAeQ,iBAGlDoB,QAAQC,IAAI,mCAAqC+B,EAAO,IAExDjB,EAAKyB,YAAYR,EAAO,OAG/BK,MAAM,SAACI,GACJzC,QAAQsC,MAAMG,YAGtBd,OAAOC,SAASW,GAAG,kBAAmB,SAACP,GACnChC,QAAQC,IAAI,yBACU,IAAlB+B,EAAOrC,QACPK,QAAQC,IAAI,sCACZc,EAAKM,YAAY,CAAElD,eAAgBC,GAAeQ,aAAcQ,QAAS,OAIzEY,QAAQC,IAAI,wBAEZc,EAAKyB,YAAYR,EAAO,oPAOhCL,OAAOC,SACFC,QAAQ,CAAEC,OAAQ,wBAClBC,KAAK,SAACC,MAENK,MAAM,SAACI,GACa,OAAbA,EAAIC,KAGJ1C,QAAQC,IAAI,+BAEZD,QAAQsC,MAAMG,8KAKZrD,mEACdY,QAAQC,IAAI,YAAcb,EAAU,WACpCkB,KAAKe,YAAY,CAAElD,eAAgBC,GAAee,MAAOC,wRAM/CuC,OAAOC,SAASC,QAAQ,CAC1BC,OAAQ,6BACRa,OAAQ,CAAC,CAAEC,QAAST,QACrBJ,KAAK,SAACC,GACLhC,QAAQC,IAAI+B,KACbK,MAAM,SAACI,GACNzC,QAAQC,IAAIwC,+DAIhBzC,QAAQC,IAAR4C,EAAAC,IAEyB,OAArBD,EAAAC,GAAYJ,gDAEFf,OAAOC,SAASC,QAAQ,CAC1BC,OAAQ,0BACRa,OAAQ,CAAC,CAAEC,QAAS,QAASG,OAAQ,uMCxIhDC,EAAY1F,IAAOC,IAAV0F,MAAAxF,OAAAC,EAAA,EAAAD,CAAA,8ECATyF,EAAoB5F,IAAOC,IAAV4F,MAAA1F,OAAAC,EAAA,EAAAD,CAAA,wJAUjB2F,EAAY9F,IAAOuC,IAAVwD,MAAA5F,OAAAC,EAAA,EAAAD,CAAA,sEAMT6F,EAAUhG,IAAOC,IAAVgG,MAAA9F,OAAAC,EAAA,EAAAD,CAAA,ikBCqCL+F,oLA/CF,IAAApD,EAAAE,KACL,OAAIA,KAAKrC,MAAMC,MAAMC,iBAAmBC,GAAeQ,cAAgB0B,KAAKrC,MAAMC,MAAMC,iBAAmBC,GAAeE,aAElHC,EAAAC,EAAAC,cAACyE,EAAD,KACI3E,EAAAC,EAAAC,cAAC2E,EAAD,CAAW9D,IAAK0B,MAChBzC,EAAAC,EAAAC,cAAC6E,EAAD,KACKhD,KAAKmD,iBACNlF,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAM0B,EAAKsD,sBAAsBpD,KAAKqD,mBAM5D,6CAQX,OAAIrD,KAAKrC,MAAMC,MAAMC,iBAAmBC,GAAeQ,aAC5C,UAEF0B,KAAKrC,MAAMC,MAAMC,iBAAmBC,GAAeE,aACjD,sBADN,2CAML,GAAIgC,KAAKrC,MAAMC,MAAMC,iBAAmBC,GAAeE,aACnD,OAAOC,EAAAC,EAAAC,cAAA,0EAKP6B,KAAKrC,MAAMC,MAAMC,iBAAmBC,GAAeE,aACnDgC,KAAKrC,MAAMU,gBAEN2B,KAAKrC,MAAMC,MAAMC,iBAAmBC,GAAeQ,cACxD0B,KAAKrC,MAAMY,uBA3CGsC,yCCHbyC,GAAetG,IAAOC,IAAVsG,MAAApG,OAAAC,EAAA,EAAAD,CAAA,8BAKZqG,GAAQxG,IAAOC,IAAVwG,MAAAtG,OAAAC,EAAA,EAAAD,CAAA,iUAoBLuG,GAAO1G,IAAOC,IAAV0G,MAAAxG,OAAAC,EAAA,EAAAD,CAAA,0XCxBF,SAASyG,GAAOjG,GAE3B,OAAIA,EAAMkG,QAEF5F,EAAAC,EAAAC,cAACmF,GAAD,KACIrF,EAAAC,EAAAC,cAACqF,GAAD,MACAvF,EAAAC,EAAAC,cAACuF,GAAD,OAKA,qBCZT,UAAMI,GAAsB9G,IAAOC,IAAV8G,QAAA5G,OAAAC,EAAA,EAAAD,CAAA,wLCAnB6G,GAAoBhH,IAAOC,IAAVgH,QAAA9G,OAAAC,EAAA,EAAAD,CAAA,oICEf,SAAS+G,GAAYvG,GAEhC,OAAIA,EAAMkG,QACE5F,EAAAC,EAAAC,cAAC6F,GAAD,KACJ/F,EAAAC,EAAAC,cAAA,gFAKG,KCXR,+BAAMgG,GAAiBnH,IAAOC,IAAVmH,QAAAjH,OAAAC,EAAA,EAAAD,CAAA,uGCAdkH,GAAarH,IAAOC,IAAVqH,QAAAnH,OAAAC,EAAA,EAAAD,CAAA,4LASVoH,GAASvH,IAAOC,IAAVuH,QAAArH,OAAAC,EAAA,EAAAD,CAAA,ycAwBN2F,GAAY9F,IAAOC,IAAVwH,QAAAtH,OAAAC,EAAA,EAAAD,CAAA,qUAiBTuH,GAAS1H,IAAOC,IAAV0H,QAAAxH,OAAAC,EAAA,EAAAD,CAAA,6GAQNyH,GAAU5H,IAAOC,IAAV4H,QAAA1H,OAAAC,EAAA,EAAAD,CAAA,4EAMP2H,GAAY9H,IAAOuC,IAAVwF,QAAA5H,OAAAC,EAAA,EAAAD,CAAA,mMAcT6H,GAAchI,IAAOiI,EAAVC,QAAA/H,OAAAC,EAAA,EAAAD,CAAA,sLAWXgI,GAAkBnI,IAAOC,IAAVmI,QAAAjI,OAAAC,EAAA,EAAAD,CAAA,6ZCpCbkI,eA9CX,SAAAA,EAAY1H,GAAO,IAAAmC,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAA6C,KAAAqF,IACfvF,EAAA3C,OAAA8C,EAAA,EAAA9C,CAAA6C,KAAA7C,OAAA+C,EAAA,EAAA/C,CAAAkI,GAAAlF,KAAAH,KAAMrC,KACDC,MAAQ,CACTwC,gBAAgB,GAGpBN,EAAKO,cAAgBP,EAAKO,cAAcC,KAAnBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA2C,KANNA,6EAULM,GACVJ,KAAKQ,SAAS,CAAEJ,iDAIhB,IAAIkF,EAAY,IAAIC,KAAKlE,OAAOC,UAAUkE,MAAMC,MAAM,MAAO,SAC7DC,aAAa1F,KAAKrC,MAAMgI,KAAKC,GAAIN,EAAWtF,KAAKrC,MAAMC,MAAMkB,0CAGxD,IAAA2B,EAAAT,KACL,OACI/B,EAAAC,EAAAC,cAACkG,GAAD,KACIpG,EAAAC,EAAAC,cAACoG,GAAD,KACItG,EAAAC,EAAAC,cAAA,OAAKY,IAAK,eAAgBC,IAAG,yBAAAC,OAA2B,IAAIC,IAAUc,KAAKrC,MAAMgI,KAAKE,OAAQ,IAAI1G,cAClGlB,EAAAC,EAAAC,cAAA,SAAI6B,KAAKrC,MAAMgI,KAAKE,SAExB5H,EAAAC,EAAAC,cAAC2H,GAAD,KACI7H,EAAAC,EAAAC,cAAA,OAAKY,IAAK,OAAQC,IAAG,+BAAAC,OAAiCe,KAAKrC,MAAMgI,KAAKI,SAE1E9H,EAAAC,EAAAC,cAACuG,GAAD,KACIzG,EAAAC,EAAAC,cAACyG,GAAD,KACI3G,EAAAC,EAAAC,cAAC2G,GAAD,CAAW9F,IAAKgH,KAAS5H,QAAS,SAAC6H,GAAYxF,EAAKyF,UAExDjI,EAAAC,EAAAC,cAAC6G,GAAD,KACKhF,KAAKrC,MAAMgI,KAAKQ,aAErBlI,EAAAC,EAAAC,cAACgH,GAAD,KACIlH,EAAAC,EAAAC,cAAA,kBAAU,IAAIoH,KAAKlE,OAAOC,UAAUkE,MAAMY,QAAQpG,KAAKrC,MAAMgI,KAAKL,UAAUnG,WAAY,SAAxF,kBAvCL0B,aCLNwF,GAAuBrJ,IAAOQ,OAAV8I,QAAAnJ,OAAAC,EAAA,EAAAD,CAAA,uWCClB,SAASoJ,GAAe5I,GAGnC,OAAIA,EAAMkG,UAAYlG,EAAM6I,UAEpBvI,EAAAC,EAAAC,cAACkI,GAAD,CAAsBjI,QAAS,SAAC6H,GAAYtI,EAAM8I,kBAAlD,aAKE9I,EAAMkG,SAAWlG,EAAM6I,UAEzBvI,EAAAC,EAAAC,cAACkI,GAAD,mBAMI,SCcDK,oLAxBP,OAAQ1G,KAAK2G,gDAKL,IAAA7G,EAAAE,KACR,OAAwB,MAApBA,KAAKrC,MAAMiJ,MAEP3I,EAAAC,EAAAC,cAACgG,GAAD,KACKnE,KAAKrC,MAAMiJ,MAAMC,IAAI,SAAClB,EAAMmB,GACzB,OAAO7I,EAAAC,EAAAC,cAAC4I,GAAD,CAAMnJ,MAAOkC,EAAKnC,MAAMC,MAAO+H,KAAMA,EAAMmB,IAAKA,MAE3D7I,EAAAC,EAAAC,cAACoI,GAAD,CAAgBC,UAAWxG,KAAKrC,MAAM6I,UAAWC,cAAezG,KAAKrC,MAAM8I,cAAe5C,QAAS7D,KAAKrC,MAAMqJ,sBAK/G,YAtBInG,aCkIRoG,eA3HX,SAAAA,EAAYtJ,GAAO,IAAAmC,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAA6C,KAAAiH,IACfnH,EAAA3C,OAAA8C,EAAA,EAAA9C,CAAA6C,KAAA7C,OAAA+C,EAAA,EAAA/C,CAAA8J,GAAA9G,KAAAH,KAAMrC,KASVuJ,kBAAoB,KAVDpH,EAWnBqH,iBAAmB,KAXArH,EAanBsH,UAAY,CACRxJ,MAAO,CACHkB,QAAS,KAbbgB,EAAKlC,MAAQ,CACTgJ,MAAO,KACPI,oBAAoB,EACpBR,WAAW,GAEf1G,EAAK2G,cAAgB3G,EAAK2G,cAAcnG,KAAnBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA2C,KAPNA,mFAmBC,IAAAW,EAAAT,KAChBA,KAAKkH,kBAAoBG,eACzBrH,KAAKkH,kBAAkBjF,GAAG,OAAQ,SAAAqF,GAC9B,IAAMC,ECnCX,SAA2BD,GAW9B,OAVA5H,QAAQC,IAAI,0BAA2B2H,GACvB,CACZzB,OAAQyB,EAAaE,aAAa3B,OAClCM,YAAamB,EAAaE,aAAarB,YACvCJ,KAAMuB,EAAaE,aAAazB,KAChCH,GAAI0B,EAAaE,aAAa5B,GAC9B6B,QAASH,EAAaE,aAAaC,QACnCnC,UAAWgC,EAAaE,aAAalC,WD2BjBoC,CAAkBJ,GACR7G,EAAK7C,MAAMgJ,MAAMe,KAAK,SAAAhC,GAAI,OAAIA,EAAKC,KAAO2B,EAAQ3B,KAKxElG,QAAQC,IAAI,wBAHZc,EAAKD,SAAS,CAAEoG,MAAW,CAACW,GAAPtI,OAAA9B,OAAAyK,GAAA,EAAAzK,CAAoBsD,EAAK7C,MAAMgJ,YAO5D5G,KAAKmH,iBAAmBU,eACxB7H,KAAKmH,iBAAiBlF,GAAG,OAAQ,SAAA6F,GAC7B,IAAMC,EChCX,SAAiCD,GAYpC,OAVApI,QAAQC,IAAI,yBAA0BmI,GAChB,CAClBjC,OAAQiC,EAAmBN,aAAa3B,OACxCM,YAAa2B,EAAmBN,aAAarB,YAC7CJ,KAAM+B,EAAmBN,aAAazB,KACtCH,GAAIkC,EAAmBN,aAAa5B,GACpC6B,QAASK,EAAmBN,aAAaC,QACzCnC,UAAWwC,EAAmBN,aAAalC,WDuBjB0C,CAAwBF,GACxCG,EAAYxH,EAAK7C,MAAMgJ,MAAMsB,UAAU,SAACvC,GAAD,OAAUA,EAAKC,KAAOmC,EAAcnC,MAC9D,IAAfqC,EACAxH,EAAKD,SAAS,SAAA2H,GAAA,IAAGvB,EAAHuB,EAAGvB,MAAH,MAAgB,CAC1BA,MAAK,GAAA3H,OAAA9B,OAAAyK,GAAA,EAAAzK,CACEyJ,EAAMwB,MAAM,EAAGH,IADjB,CAAA9K,OAAAkL,GAAA,EAAAlL,CAAA,GAGMyJ,EAAMqB,GAHZ,CAIG3C,UAAWyC,EAAczC,aAJ5BnI,OAAAyK,GAAA,EAAAzK,CAMEyJ,EAAMwB,MAAMH,EAAY,QAKnCvI,QAAQC,IAAI,yEAMpBK,KAAKkH,kBAAkBoB,YAAY,SAAUtG,EAAOuG,GAC5CA,GACA7I,QAAQC,IAAI,gCAEpBK,KAAKmH,iBAAiBmB,YAAY,SAAUtG,EAAOuG,GAC3CA,GACA7I,QAAQC,IAAI,6EAKpBD,QAAQC,IAAIK,KAAKrC,MAAMC,OACnBoC,KAAKrC,MAAMC,MAAMkB,SAAYkB,KAAKrC,MAAMC,MAAMkB,UAAYkB,KAAKoH,UAAUxJ,MAAMkB,UAC/EkB,KAAKyG,gBACL/G,QAAQC,IAAIK,KAAKrC,MAAMC,QAE3BoC,KAAKoH,UAAYpH,KAAKrC,8CAIV,IAAA6K,EAAAxI,KACZA,KAAKQ,SAAS,CAAEgG,WAAW,IAC3B9G,QAAQC,IAAI,iBACZ8I,eAAYhH,KAAK,SAAAC,GACbhC,QAAQC,IAAI+B,GACZ8G,EAAKE,eAAehH,KAErBK,MAAM,SAAAC,GACLtC,QAAQC,IAAIqC,GACZwG,EAAKhI,SAAS,CAAEgG,WAAW,6CAIpBmC,GACX,IAAI3B,EAEJtH,QAAQC,IAAIgJ,GAER3B,EADoB,IAApB2B,EAAStJ,QAAqD,MAArCsJ,EAASA,EAAStJ,OAAS,GAAGuG,GAOlC,OAArB5F,KAAKpC,MAAMgJ,MACX5G,KAAKQ,SAAS,CAAEwG,qBAAoBJ,MAAO+B,EAAUnC,WAAW,IAGhExG,KAAKQ,SAAS,CAAEwG,qBAAoBJ,MAAK,GAAA3H,OAAA9B,OAAAyK,GAAA,EAAAzK,CAAM6C,KAAKpC,MAAMgJ,OAAjBzJ,OAAAyK,GAAA,EAAAzK,CAA2BwL,IAAWnC,WAAW,qCAK9F,OAAIxG,KAAKrC,MAAMC,MAAMC,iBAAmBC,GAAee,MAE/CZ,EAAAC,EAAAC,cAAC2F,GAAD,KACI7F,EAAAC,EAAAC,cAACyF,GAAD,CAAQC,QAA8B,OAArB7D,KAAKpC,MAAMgJ,QAC5B3I,EAAAC,EAAAC,cAAC+F,GAAD,CAAaL,QAA6B,MAApB7D,KAAKpC,MAAMgJ,OAA6C,IAA5B5G,KAAKpC,MAAMgJ,MAAMvH,SACnEpB,EAAAC,EAAAC,cAACyK,GAAD,CAAUpC,UAAWxG,KAAKpC,MAAM4I,UAAWC,cAAezG,KAAKyG,cAAe7I,MAAOoC,KAAKrC,MAAMC,MAAOgJ,MAAO5G,KAAKpC,MAAMgJ,MAAOI,mBAAoBhH,KAAKpC,MAAMoJ,sBAKhK,YAzHSnG,aEDf/C,GAAiB,CAC5B+K,KAAM,EACN9K,aAAc,EACdC,aAAc,EACdM,aAAc,EACdO,MAAO,GAqDMiK,eAhDb,SAAAA,EAAYnL,GAAO,IAAAmC,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAA6C,KAAA8I,IACjBhJ,EAAA3C,OAAA8C,EAAA,EAAA9C,CAAA6C,KAAA7C,OAAA+C,EAAA,EAAA/C,CAAA2L,GAAA3I,KAAAH,KAAMrC,KACDC,MAAQ,CACXkB,QAAS,GACTjB,eAAgBC,GAAe+K,KAC/B7B,oBAAoB,GAMtBlH,EAAKiB,YAAcjB,EAAKiB,YAAYT,KAAjBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA2C,KACnBA,EAAKvB,cAAgBuB,EAAKvB,cAAc+B,KAAnBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA2C,KACrBA,EAAKzB,cAAgByB,EAAKzB,cAAciC,KAAnBnD,OAAAoD,EAAA,EAAApD,QAAAoD,EAAA,EAAApD,CAAA2C,KAbJA,2LAmBjBE,KAAK+I,4BAA8B,IAAIjI,EAA4Bd,KAAKe,aACxEf,KAAK+I,4BAA4BC,qJAKjChJ,KAAK+I,4BAA4BxK,wDAIjCyB,KAAK+I,4BAA4B1K,oDAGvB4K,GACVjJ,KAAKQ,SAASyI,oCAKd,OACEhL,EAAAC,EAAAC,cAACuE,EAAD,KACEzE,EAAAC,EAAAC,cAAC+K,EAAD,CAAQC,cAAenJ,KAAKpC,MAAMuL,cAAepI,YAAaf,KAAKe,YAAanD,MAAOoC,KAAKpC,MAAOS,cAAe2B,KAAK3B,gBACvHJ,EAAAC,EAAAC,cAACiL,GAAD,CAAaxL,MAAOoC,KAAKpC,MAAOW,cAAeyB,KAAKzB,cAAeF,cAAe2B,KAAK3B,gBACvFJ,EAAAC,EAAAC,cAACkL,GAAD,CAAetI,YAAaf,KAAKe,YAAanD,MAAOoC,KAAKpC,gBA5ChDiD,aCLEyI,QACW,cAA7BjI,OAAOkI,SAASC,UAEe,UAA7BnI,OAAOkI,SAASC,UAEhBnI,OAAOkI,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO1L,EAAAC,EAAAC,cAACyL,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxI,KAAK,SAAAyI,GACjCA,EAAaC,oCEnInBC,EAAAC,QAAiBC,EAAArF,EAAuB,uGCElCsF,EADaC,EAAQ,IACdC,CAAW,CAAEC,KAAM,iBAAkBC,KAAM,KAAMC,SAAU,UAGjE,SAAeC,EAAtBC,GAAA,OAAAC,EAAAC,MAAAhL,KAAAiL,sDAAO,SAAAC,EAA8BC,GAA9B,IAAAzJ,EAAA,OAAA0J,EAAAlN,EAAAmN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEH9L,QAAQC,IAAI,8BAFT2L,EAAAE,KAAA,EAGgBjB,EAAKkB,IAAIN,GAHzB,cAGCzJ,EAHD4J,EAAAI,KAAAJ,EAAAK,OAAA,SAKIjK,EAAO,GAAGqE,MALd,wBAAAuF,EAAAM,SAAAV,6FCDP,IAAIW,EAAmB,EAEhB,SAAepD,IAAtB,OAAAqD,EAAAd,MAAAhL,KAAAiL,sDAAO,SAAAC,IAAA,IAAAa,EAAAC,EAAAC,EAAAC,EAAAvG,EAAA,OAAAyF,EAAAlN,EAAAmN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBW,cAFnB,UAECJ,EAFDT,EAAAI,KAAA,CAAAJ,EAAAE,KAAA,eAAAF,EAAAK,OAAA,SAIS,2BAJT,UAOHI,EAAYnK,SAASmK,EAAW,IAC5BC,EAAY,GAES,IAArBH,EAVD,CAAAP,EAAAE,KAAA,gBAWC9L,QAAQC,IAAI,qCAXb2L,EAAAK,OAAA,SAYQ,IAZR,WAcoB,IAAdI,EAdN,CAAAT,EAAAE,KAAA,gBAeC9L,QAAQC,IAAI,8BAfb2L,EAAAK,OAAA,SAgBQ,IAhBR,QAkB2B,IAArBE,GACLnM,QAAQC,IAAI,sBAAwBoM,EAAY,QAAUA,EAAY,GAAG5M,YACzE0M,EAAmBE,EAAY,GAG/BrM,QAAQC,IAAI,uBAAyBkM,EAAmB,GAAG1M,WAAa,QAAU0M,EAAmB,GAAG1M,YAvBzG,QA0BC8M,EAAyB,EACpBC,EAAIL,EAAmB,EA3B7B,aA2BgCK,EAAI,GAAKA,EAAIL,EAAmB,GA3BhE,CAAAP,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4BoBY,YAAYF,GA5BhC,WA4BOvG,EA5BP2F,EAAAI,KAAA,CAAAJ,EAAAE,KAAA,gBAAAF,EAAAK,OAAA,SA8BYU,MAAM,4BA9BlB,QAgCCL,EAAUM,KAAK3G,GACfsG,IAjCD,QA2BmEC,IA3BnEZ,EAAAE,KAAA,wBAoCHK,GAAsCI,EApCnCX,EAAAK,OAAA,SAqCKK,GArCL,yBAAAV,EAAAM,SAAAV,6BAyCA,SAAeqB,EAAtBzB,EAAA0B,EAAAC,GAAA,OAAAC,EAAA1B,MAAAhL,KAAAiL,sDAAO,SAAA0B,EAA0B7N,EAAS8N,EAAazG,GAAhD,IAAA0G,EAAA,OAAAzB,EAAAlN,EAAAmN,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EAEmBX,EAAe+B,GAFlC,YAECC,EAFDC,EAAApB,MAAA,CAAAoB,EAAAtB,KAAA,eAKC9L,QAAQC,IAAI,0EALbmN,EAAAnB,OAAA,SAMQoB,YAAmBF,EAAW1G,EAAarH,IANnD,cAAAgO,EAAAnB,OAAA,SASQkB,GATR,wBAAAC,EAAAlB,SAAAe,uEC/CPvC,EAAAC,QAAiBC,EAAArF,EAAuB,uMCO3B+H,EAAc,CACvBnE,KAAM,EACNoE,cAAe,EACfC,iBAAkB,EAClBC,mBAAoB,GAIlBxM,cAOF,SAAAA,EAAYhD,GAAO,IAAAmC,EAAA,OAAA3C,OAAAiQ,EAAA,EAAAjQ,CAAA6C,KAAAW,IACfb,EAAA3C,OAAAkQ,EAAA,EAAAlQ,CAAA6C,KAAA7C,OAAAmQ,EAAA,EAAAnQ,CAAAwD,GAAAR,KAAAH,KAAMrC,KALV4P,OAAS,GAIUzN,EAHnBqG,YAAc,GAGKrG,EAYnB0N,YAAc,SAAAvH,GAGVA,EAAMwH,iBACN,IAAMC,EAAOzH,EAAM0H,OAAOC,MAAM,GAG1BC,EAAeC,IAAIC,gBAAgB9H,EAAM0H,OAAOC,MAAM,IACtDI,EAAS,IAAI3M,OAAO4M,WAC1BD,EAAOE,kBAAkBR,GAEzBM,EAAOG,UAAY,WACfrO,EAAKyN,OAASa,EAAOJ,EAAOtM,QAC5B5B,EAAKU,SAAS,CAAE6N,OAAQrB,EAAYC,cAAeqB,MAAO,oBAAqBT,mBAvBnF/N,EAAKlC,MAAQ,CACTyQ,OAAQrB,EAAYnE,KACpByF,MAAO,kBACPT,aAAc,IAElB/N,EAAKqG,YAAc,GACnBrG,EAAKyO,OAASzO,EAAKyO,OAAOjO,KAAZnD,OAAAqR,EAAA,EAAArR,QAAAqR,EAAA,EAAArR,CAAA2C,KARCA,sEA6BZqG,GAAa,IAAA1F,EAAAT,KAChBA,KAAKQ,SAAS,CAAE6N,OAAQrB,EAAYG,mBAAoBmB,MAAO,4BAC/D/B,YAAWvM,KAAKrC,MAAMC,MAAMkB,QAASkB,KAAKuN,OAAQpH,GAC7C1E,KAAK,SAAAC,GACFjB,EAAKgO,gBAER1M,MAAM,SAAAC,4CAMXhC,KAAKQ,SAAS,CAAE6N,OAAQrB,EAAYnE,OACpC7I,KAAKrC,MAAM0C,eAAc,oCAIpB,IAAAmI,EAAAxI,KACL,OACI0O,EAAAxQ,EAAAC,cAACwQ,EAAA,EAAD,CACI/N,KAAMZ,KAAKrC,MAAMiD,KACjBgO,OAAQ,kBAAMpG,EAAKiG,eACnBI,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,GACP/O,KAAKgP,iDAMd,OAAIhP,KAAKpC,MAAMyQ,SAAWrB,EAAYnE,KAC3B6F,EAAAxQ,EAAAC,cAAC8Q,EAAA,EAAD,CAAiBrR,MAAOoC,KAAKpC,MAAO4P,YAAaxN,KAAKwN,cAExDxN,KAAKpC,MAAMyQ,SAAWrB,EAAYC,cAChCyB,EAAAxQ,EAAAC,cAAC+Q,EAAA,EAAD,CAAoBtR,MAAOoC,KAAKpC,MAAO2Q,OAAQvO,KAAKuO,SAEtDvO,KAAKpC,MAAMyQ,SAAWrB,EAAYG,mBAChCuB,EAAAxQ,EAAAC,cAACgR,EAAA,EAAD,CAA2BvR,MAAOoC,KAAKpC,aAD7C,SAzEYiD,aA8EVF,8w7KC7FfyJ,EAAAC,QAAiBC,EAAArF,EAAuB,6DCAxCmF,EAAAC,QAAiBC,EAAArF,EAAuB,+JCE3BmK,EAAwBpS,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,iGAMrBkS,EAAQrS,IAAOiI,EAAV3H,MAAAH,OAAAC,EAAA,EAAAD,CAAA,qPAaLmS,EAAQtS,IAAOC,IAAVgG,MAAA9F,OAAAC,EAAA,EAAAD,CAAA,uPAcLoS,EAASvS,IAAOQ,OAAVmH,MAAAxH,OAAAC,EAAA,EAAAD,CAAA,+UC/BbqS,mLAEO,IAAA1P,EAAAE,KACL,OACI/B,EAAAC,EAAAC,cAACiR,EAAD,KACInR,EAAAC,EAAAC,cAACkR,EAAD,KACKrP,KAAKrC,MAAMC,MAAM0Q,OAEtBrQ,EAAAC,EAAAC,cAACmR,EAAD,KACIrR,EAAAC,EAAAC,cAAA,OAAKY,IAAI,cAAcC,IAAKyQ,OAEhCxR,EAAAC,EAAAC,cAAA,SAAOuR,IAAK,SAACC,GAAD,OAAY7P,EAAK8P,aAAeD,GAAQ/J,GAAG,aAAaiK,KAAK,OAAOC,OAAO,0BAA0BC,MAAO,CAAEC,QAAS,QAAUC,SAAUjQ,KAAKrC,MAAM6P,cAClKvP,EAAAC,EAAAC,cAACoR,EAAD,CAAQnR,QAAS,kBAAM0B,EAAK8P,aAAaM,UAAzC,kCAZcrP,aAkBf2O,2HCpBFW,EAA2BnT,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,iGAMxBkS,EAAQrS,IAAOiI,EAAV3H,MAAAH,OAAAC,EAAA,EAAAD,CAAA,qPAuBLiT,GAXQpT,IAAOC,IAAVgG,MAAA9F,OAAAC,EAAA,EAAAD,CAAA,+KAWEH,IAAOC,IAAV0H,MAAAxH,OAAAC,EAAA,EAAAD,CAAA,kYAuBJoS,EAASvS,IAAOQ,OAAVqH,MAAA1H,OAAAC,EAAA,EAAAD,CAAA,kVClDbkT,6MAEFlK,YAAc,KAEdmK,aAAe,SAAArK,GAEXnG,EAAKqG,YAAcF,EAAM0H,OAAO4C,+EAI3B,IAAA9P,EAAAT,KACL,OACI/B,EAAAC,EAAAC,cAACgS,EAAD,KACIlS,EAAAC,EAAAC,cAACkR,EAAD,KACKrP,KAAKrC,MAAMC,MAAM0Q,OAEtBrQ,EAAAC,EAAAC,cAACiS,EAAD,KACInS,EAAAC,EAAAC,cAAA,OAAKY,IAAI,UAAUC,IAAKgB,KAAKrC,MAAMC,MAAMiQ,eACzC5P,EAAAC,EAAAC,cAAA,YAAU8R,SAAUjQ,KAAKsQ,gBAE7BrS,EAAAC,EAAAC,cAACoR,EAAD,CAAQnR,QAAS,kBAAMqC,EAAK9C,MAAM4Q,OAAO9N,EAAK0F,eAA9C,uBApBiBtF,aA0BlBwP,uHC1BFG,EAAkCxT,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,6KAY/BkS,EAAQrS,IAAOiI,EAAV3H,MAAAH,OAAAC,EAAA,EAAAD,CAAA,qPCbZsT,GDyBgBzT,IAAOQ,OAAVyF,MAAA9F,OAAAC,EAAA,EAAAD,CAAA,mgBCrBX,OACIc,EAAAC,EAAAC,cAACqS,EAAD,KACIvS,EAAAC,EAAAC,cAACkR,EAAD,KACKrP,KAAKrC,MAAMC,MAAM0Q,OAEtBrQ,EAAAC,EAAAC,cAAA,gFATwB0C,cAczB4P,0kBCXTC,EAAe,IAAK,WAAInL,GAAKlE,OAAOC,UAAWqP,IAAIC,UAASC,EAAaC,IAAKjP,KAO7E,SAASgG,IACZ,OAAO6I,EAAaK,OAAOC,aAIxB,SAAS3J,IACZ,OAAOqJ,EAAaK,OAAOE,cAIxB,SAAe7E,EAAtBtB,GAAA,OAAAoG,EAAAlG,MAAAhL,KAAAiL,sDAAO,SAAAC,EAA2BtF,GAA3B,IAAAD,EAAA,OAAAwL,EAAAjT,EAAAmN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACgBkF,EAAaU,QAAQxK,MAAMhB,GAAIzF,OAD/C,YACGwF,EADH2F,EAAAI,MAAA,CAAAJ,EAAAE,KAAA,eAAAF,EAAAK,OAAA,SAGShG,GAHT,cAAA2F,EAAAK,OAAA,SAMS,uBANT,wBAAAL,EAAAM,SAAAV,6BAWA,SAAeiB,IAAtB,OAAAkF,EAAArG,MAAAhL,KAAAiL,sDAAO,SAAA0B,IAAA,IAAAZ,EAAA,OAAAoF,EAAAjT,EAAAmN,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACmBkF,EAAaU,QAAQrF,YAAY5L,OADpD,UACC4L,EADDe,EAAApB,KAEHhM,QAAQC,IAAIoM,IACRA,EAHD,CAAAe,EAAAtB,KAAA,eAAAsB,EAAAnB,OAAA,SAISI,GAJT,cAAAe,EAAAnB,OAAA,SAOS,4BAPT,wBAAAmB,EAAAlB,SAAAe,6BAWA,SAAeI,EAAtBP,EAAAC,EAAA6E,GAAA,OAAAC,EAAAvG,MAAAhL,KAAAiL,sDAAO,SAAAuG,EAAkC3E,EAAW1G,EAAarH,GAA1D,OAAAqS,EAAAjT,EAAAmN,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cAAAiG,EAAA9F,OAAA,SAEI,IAAI+F,QAAQ,SAACC,EAASC,GACzBlB,EAAaU,QAAQ7E,WAAWM,EAAW1G,GAAa0L,KAAK,CAAEC,KAAMhT,IAChEmD,GAAG,kBAAmB,SAAC8P,GACpBrS,QAAQC,IAAI,+BAAgCoS,GAC5CJ,EAAQI,KAEX9P,GAAG,QAAS,SAACD,GACV4P,EAAO5P,QAThB,wBAAAyP,EAAA7F,SAAA4F,6BAiBA,SAAe9L,EAAtBsM,EAAAC,EAAAC,GAAA,OAAAC,EAAAnH,MAAAhL,KAAAiL,sDAAO,SAAAmH,EAA4BxM,EAAIN,EAAWxG,GAA3C,IAAAuT,EAAA,OAAAlB,EAAAjT,EAAAmN,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cACC6G,EAAY3B,EAAaU,QAAQ1L,aAAaE,GAAIiM,KAAK,CAAEC,KAAMhT,EAASyR,MAAOjL,IADhFgN,EAAA3G,OAAA,SAGI0G,GAHJ,wBAAAC,EAAA1G,SAAAwG,mFC3DP9H,EAAAiI,EAAAC,EAAA,sBAAAC,IAAAnI,EAAAiI,EAAAC,EAAA,sBAAAE,IAAApI,EAAAiI,EAAAC,EAAA,sBAAAG,IAAA,IAAMC,EAAqC,6CAA6CzT,WAW3EsT,GAP8B,GAAGtT,WAOHyT,GAC9BF,EAXU,EAYVC,EAXc","file":"static/js/main.c49506ab.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const StyledNavBar = styled.div`\n  background-color: #fff;\n  padding: 0 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: fixed;\n  width:100%;\n  z-index:100;\n  flex-direction: row;\n  border-bottom: 1px solid rgba(var(--b6a,219,219,219),1);\n  img {\n    width: 80px;\n    height: 80px;\n  }\n\n`\n\nexport const RightStack = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  \n`\n","import styled from 'styled-components'\nexport const StyledMainButton = styled.button`\n\nborder-radius: 50px;\nborder: none;\nbox-shadow: 0 0 10px rgba(0,0,0,0.15);\ncursor: pointer;\nfont-size: 16px;\nfont-weight: 700;\npadding: 15px 60px;\nbackground-color: #e0a61d;\nmargin: 0 20px 0 0;\nsrc: payIcon;\n\n&:hover{\n    opacity: 0.9;\n    transform: scale(0.98)\n}\n\n`","import React from 'react';\nimport { StyledMainButton } from './MainButton.styled'\nimport { MetamaskStatus } from '../../../App';\n\nexport default function MainButton(props) {\n\n\n    if (props.state.metamaskStatus === MetamaskStatus.NotInstalled || props.state.metamaskStatus === MetamaskStatus.WrongNetwork) {\n        return (\n            <StyledMainButton onClick={() => onClickAction(props)}>\n                {getContent(props.state.metamaskStatus)}\n            </StyledMainButton>\n        )\n    }\n    else {\n        return (null)\n    }\n\n\n    function getContent() {\n        if (props.state.metamaskStatus === MetamaskStatus.NotInstalled) {\n            return \"Loading\"\n        }\n        else if (props.state.metamaskStatus === MetamaskStatus.WrongNetwork) {\n            return \"Switch Network\"\n        }\n    }\n\n    function onClickAction(props) {\n        if (props.state.metamaskStatus === MetamaskStatus.WrongNetwork) {\n            props.switchNetwork()\n        }\n        else if (props.state.metamaskStatus === MetamaskStatus.NotConnected) {\n            props.connectWallet()\n        }\n    }\n}\n\n","import styled from 'styled-components'\n\nexport const StyledAccountInfo = styled.div`\n\nfont-size: 14px;\nfont-weight: 700;\nmargin: 0 10px 0 0;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\n\nimg {\n    width: 26px;\n    height: 26px;\n}\np {\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-left: 10px;\n  margin-right: 0;\n}\n`","import React from 'react';\n\n\nimport { StyledAccountInfo } from './AccountInfo.styled';\nimport Identicon from 'identicon.js';\nimport { MetamaskStatus } from '../../../App';\n\nexport default function AccountInfo(props) {\n\n    if (props.state.metamaskStatus === MetamaskStatus.Ready && props.state.account) {\n        return (\n            <StyledAccountInfo>\n                <img alt={\"address icon\"} src={`data:image/png;base64,${new Identicon(props.state.account, 30).toString()}`} />\n                <p>{props.state.account.substring(0, 4) + \"...\" + props.state.account.substring(props.state.account.length - 5)}</p>\n            </StyledAccountInfo>)\n    }\n    else {\n        return (null)\n    }\n\n\n\n}\n\n","import styled from 'styled-components'\n\nexport const StyledNewPostButton = styled.img`\n    background-color: transparent;\n    transform: scale(0.36);\n    cursor: pointer;\n    border: none;\n}\n`\n","import React from \"react\";\nimport { StyledNewPostButton } from \"./NewPostButton.styled\";\nimport newPostIcon from '../../../assets/new_post_icon.svg'\nimport { MetamaskStatus } from '../../../App'\n\nexport default function NewPostButton(props) {\n\n    if (props.state.metamaskStatus === MetamaskStatus.Ready) {\n        console.log(\"Showing post button\", props)\n        return (\n            <StyledNewPostButton src={newPostIcon} onClick={() => props.onClick()} />\n        )\n    }\n    else {\n        console.log(\"Hiding post button\", props)\n        return null\n    }\n}\n","import React, { Component } from 'react';\nimport { RightStack, StyledNavBar } from './Navbar.styled'\nimport logo from '../../assets/logo.png'\nimport MainButton from './MainButton/MainButton.js'\nimport AccountInfo from './AccountInfo/AccountInfo.js';\nimport NewPostButton from '../PostsMainView/NewPostButton/NewPostButton';\nimport ShareModal from '../Modal/ShareModal';\nimport { MetamaskStatus } from '../../App';\n\n\nclass Navbar extends Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isModalVisible: false\n    };\n\n    this.setModalState = this.setModalState.bind(this)\n  }\n\n  setModalState(isModalVisible) {\n    this.setState({ isModalVisible })\n  }\n\n\n  render() {\n    if (this.props.state.metamaskStatus === MetamaskStatus.Ready) {\n      return (\n        <StyledNavBar>\n          <img alt={\"logo\"} src={logo} />\n          <ShareModal state={this.props.state} show={this.state.isModalVisible} setModalState={this.setModalState} />\n          <RightStack>\n            <NewPostButton state={this.props.state} onClick={() => { this.setModalState(true) }} />\n            <MainButton state={this.props.state} switchNetwork={this.props.switchNetwork} />\n            <AccountInfo state={this.props.state} />\n          </RightStack>\n        </StyledNavBar >\n\n      )\n    }\n    else {\n      return null\n    }\n\n  }\n\n}\nexport default Navbar;\n\n","import detectEthereumProvider from '@metamask/detect-provider';\nimport * as Constants from '../Constants';\nimport { MetamaskStatus } from '../../App';\nimport { ropstenChainIdHexa } from '../Constants';\n\n\nexport default class BlockchainConnectionManager {\n\n\n    constructor(updateState) {\n        this.updateState = updateState\n    }\n\n\n    async validate() {\n        this.checkMetamask()\n    }\n\n\n\n    async checkMetamask() {\n\n        this.provider = await detectEthereumProvider();\n        if (this.provider) {\n            console.log('Metamask is installed')\n            // this.updateState({ metamaskStatus: true })\n            this.checkNetwork()\n        } else {\n            this.updateState({ isMetamaskInstalled: MetamaskStatus.NotInstalled })\n            console.log('Metamask not installed');\n        }\n\n    }\n\n    async checkNetwork() {\n\n        await window.ethereum.request({ method: 'eth_chainId' }).then((result) => {\n            const chainIdDecimal = parseInt(result, 16);\n            console.log(\"Current chain id: \" + result + \" (\" + chainIdDecimal + \")\")\n            if (chainIdDecimal !== Constants.ChainId) {\n                this.updateState({ metamaskStatus: MetamaskStatus.WrongNetwork })\n            }\n            else {\n                this.checkConnection()\n            }\n        }).catch((error) => {\n            console.log(error)\n        });\n\n        window.ethereum.on('chainChanged', (result) => {\n            const chainIdDecimal = parseInt(result, 16);\n            console.log(\"Chain changed, new chain id: \" + chainIdDecimal)\n            if (chainIdDecimal === Constants.ChainId) {\n                this.checkConnection()\n            }\n            else {\n                this.updateState({ metamaskStatus: MetamaskStatus.WrongNetwork })\n            }\n        });\n    }\n\n    async checkConnection() {\n\n        await window.ethereum\n            .request({ method: 'eth_accounts' })\n            .then((result) => {\n\n                if (result.length === 0) {\n                    console.log('Metamask is not connected')\n                    // this.updateState({ isMetamaskConnected: false })\n                    this.updateState({ metamaskStatus: MetamaskStatus.NotConnected })\n                }\n                else {\n                    console.log('Metamask is connected to account' + result[0])\n                    // this.updateState({ isMetamaskConnected: true })\n                    this.loadAccount(result[0])\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n\n        window.ethereum.on('accountsChanged', (result) => {\n            console.log(\"Account changed event\")\n            if (result.length === 0) {\n                console.log('User has disconnected all accounts')\n                this.updateState({ metamaskStatus: MetamaskStatus.NotConnected, account: '' })\n                // this.updateState({ isMetamaskConnected: false, account: '' })\n            }\n            else {\n                console.log('User changed account')\n                // this.updateState({ isMetamaskConnected: true })\n                this.loadAccount(result[0])\n            }\n        });\n\n    }\n\n    async connectWallet() {\n        window.ethereum\n            .request({ method: 'eth_requestAccounts' })\n            .then((result) => {\n            })\n            .catch((err) => {\n                if (err.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    // If this happens, the user rejected the connection request.\n                    console.log('Please connect to MetaMask.');\n                } else {\n                    console.error(err);\n                }\n            });\n    }\n\n    async loadAccount(account) {\n        console.log(\"Account: \" + account + \" loaded\")\n        this.updateState({ metamaskStatus: MetamaskStatus.Ready, account })\n    }\n\n    async switchNetwork() {\n\n        try {\n            await window.ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: Constants.ChainIdHexa }], // chainId must be in hexadecimal numbers\n            }).then((result) => {\n                console.log(result)\n            }).catch((err) => {\n                console.log(err)\n            });\n        }\n        catch (switchError) {\n            console.log(switchError)\n            // This error code indicates that the chain has not been added to MetaMask.\n            if (switchError.code === 4902) {\n                try {\n                    await window.ethereum.request({\n                        method: 'wallet_addEthereumChain',\n                        params: [{ chainId: '0xf00', rpcUrl: 'https://...' /* ... */ }],\n                    });\n                } catch (addError) {\n                    // handle \"add\" error\n                }\n            }\n            // handle other \"switch\" errors\n        }\n    }\n}\n","import styled from 'styled-components'\n\nexport const StyledApp = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n`","import styled from 'styled-components'\n\nexport const StyledConnectView = styled.div`\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    width: 100%;\n    padding: 250px;\n    margin-top: 80px;\n\n`\nexport const MainImage = styled.img`\n\n    width: 200px;\n    height: 200px;\n    margin: 50px;\n`\nexport const Connect = styled.div`\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    h6 {\n        margin: 0 0 0 0;\n        color: black;\n        margin-bottom: 15px;\n    }\n    button {\n        \n        color: white;\n        padding: 10px;\n        border-radius: 5px;\n        box-shadow: 0 0 10px rgba(0,0,0,0.15);\n        cursor: pointer;\n        font-size: 25px;\n        background-color: #0095f6;\n        border: none;\n        &:hover{\n            opacity: 0.9;\n            transform: scale(0.98)\n        }\n    }\n`\n","import React, { Component } from 'react';\nimport { StyledConnectView, MainImage, Connect } from './ConnectView.styled';\nimport logo from '../../assets/logo.png'\nimport { MetamaskStatus } from '../../App';\n\nclass ConnectView extends Component {\n\n\n    render() {\n        if (this.props.state.metamaskStatus === MetamaskStatus.NotConnected || this.props.state.metamaskStatus === MetamaskStatus.WrongNetwork) {\n            return (\n                <StyledConnectView>\n                    <MainImage src={logo} />\n                    <Connect>\n                        {this.getInformation()}\n                        <button onClick={() => this.handleButtonClick()}>{this.getButtonText()}</button>\n                    </Connect>\n                </StyledConnectView >\n            );\n        }\n        else {\n            return null\n        }\n\n    }\n\n\n\n    getButtonText() {\n        if (this.props.state.metamaskStatus === MetamaskStatus.NotConnected) {\n            return \"Connect\"\n        }\n        else if (this.props.state.metamaskStatus === MetamaskStatus.WrongNetwork) {\n            return \"Switch network\"\n        }\n    }\n\n    getInformation() {\n        if (this.props.state.metamaskStatus === MetamaskStatus.WrongNetwork) {\n            return <h6>Wrong network...</h6>\n        }\n    }\n\n    handleButtonClick() {\n        if (this.props.state.metamaskStatus === MetamaskStatus.WrongNetwork) {\n            this.props.switchNetwork()\n        }\n        else if (this.props.state.metamaskStatus === MetamaskStatus.NotConnected) {\n            this.props.connectWallet()\n        }\n\n\n\n    }\n}\nexport default ConnectView;\n\n","import styled from 'styled-components'\n\nexport const StyledLoader = styled.div`\n      width: 60px;\n`\n\n\nexport const Wheel = styled.div`\n  animation: spin 1s infinite linear;\n  border: 2px solid rgba(30, 30, 30, 0.5);\n  border-left: 4px solid #fff;\n  border-radius: 50%;\n  height: 50px;\n  margin-bottom: 10px;\n  width: 50px;\n\n  @keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n`\n\n\nexport const Text = styled.div`\n   color: black;\n   font-family: arial, sans-serif;\n   ::after{\n       animation: load 2s linear infinite;\n       content: 'Loading';\n  }\n\n  @keyframes load {\n      0% {\n          content: 'Loading';\n        }\n        33% {\n            content: 'Loading.';\n        }\n  67% {\n    content: 'Loading..';\n  }\n  100% {\n    content: 'Loading...';\n  }\n}\n`\n","import React from \"react\"\nimport { StyledLoader, Wheel, Text } from \"./Loader.styled\"\n\nexport default function Loader(props) {\n\n    if (props.visible) {\n        return (\n            <StyledLoader>\n                <Wheel />\n                <Text />\n            </StyledLoader>\n        )\n    }\n    else {\n        return (null)\n    }\n\n\n}","import styled from 'styled-components'\n\nexport const StyledPostsMainView = styled.div`\n    background-color: #fafafa;\n    display: flex;\n    flex-direction: column;\n    margin-top: 80px;\n    align-items: center;\n    justify-content: center;\n    flex: 1;\n`\n","import styled from 'styled-components'\n\nexport const StyledInformation = styled.div`\n    display: flex;\n    justify-content: center;\n    align-content: center;\n    h3{\n        margin: 0 0 0 0;\n    }\n\n`","import React from \"react\";\nimport { StyledInformation } from \"./Information.styled\";\n\n\nexport default function Information(props) {\n\n    if (props.visible) {\n        return (<StyledInformation>\n            <h3>There are no posts available yet, be the first to post something!</h3>\n        </StyledInformation>)\n\n    }\n    else {\n        return null\n    }\n\n}","import styled from 'styled-components'\n\nexport const StyledPostList = styled.div`\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n`","import styled from 'styled-components'\n\nexport const StyledPost = styled.div`\n    display: flex;\n    flex-direction: column;\n    border-radius: 1px;\n    border: 1px solid rgba(var(--b6a,219,219,219),1);\n    margin-top: 15px;\n    margin-bottom: 15px;\n`\n\nexport const Header = styled.div`\n\n    padding: 15px;\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: start;\n    border-bottom: 1px solid rgba(var(--b6a,219,219,219),1);\n    background-color: white;\n    img {\n        width: 30px;\n        height: 30px;\n    }\n\n    p {\n        margin-left: 10px;\n        margin-right: 0;\n        margin-bottom: 0;\n        font-size: 13px;\n        margin-top: 0;\n    }\n\n`\nexport const MainImage = styled.div`\n\n    display: flex;\n    align-content: center;\n    flex-direction: column;\n    justify-content: center;\n    border-bottom: 1px solid rgba(var(--b6a,219,219,219),1);\n\n    img{\n        display: block;\n        max-width: 600px;\n        max-height: 750px;\n        width: auto;\n        height: auto;\n    }\n`\n\nexport const Footer = styled.div`\n\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    background-color: white;\n`\n\nexport const Actions = styled.div`\n    display: flex;\n    flex-direction: row;\n    padding: 10px;\n`\n\nexport const TipButton = styled.img`\n\n    border-radius: 100%;\n    width: 30px;\n    height: 30px;\n    cursor: pointer;\n    border: none;\n    &:hover{\n        transform: scale(0.98);\n        opacity: 0.9;\n    }\n\n`\n\nexport const Description = styled.p`\n    padding: 10px;\n    margin-top: 0;\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 0;\n    font-weight: 300;\n    color: #262626;\n    font-size: 16px;\n`\n\nexport const TipsInformation = styled.div`\n\n    display: flex;\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px;\n    border-top: 1px solid rgba(var(--b6a,219,219,219),1);\n    p { \n        font-weight: 150;\n        font-size: 12px;\n        margin-top: 0;\n        margin-left: 0;\n        margin-right: 0;\n        margin-bottom: 0;\n    }\n\n`\n","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport Web3 from 'web3';\nimport { StyledPost, TipsInformation, Header, MainImage, Footer, Description, TipButton, Actions } from './Post.styled';\nimport { tipPostOwner } from '../../../api/BlockchainApi';\nimport payIcon from '../../../assets/paid_black_24dp.svg'\n\nclass Post extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isModalVisible: false\n        };\n\n        this.setModalState = this.setModalState.bind(this)\n\n    }\n\n    setModalState(isModalVisible) {\n        this.setState({ isModalVisible })\n    }\n\n    tip() {\n        let tipAmount = new Web3(window.ethereum).utils.toWei('0.1', 'Ether')\n        tipPostOwner(this.props.post.id, tipAmount, this.props.state.account)\n    }\n\n    render() {\n        return (\n            <StyledPost>\n                <Header>\n                    <img alt={\"address icon\"} src={`data:image/png;base64,${new Identicon(this.props.post.author, 30).toString()}`} />\n                    <p>{this.props.post.author}</p>\n                </Header>\n                <MainImage >\n                    <img alt={\"post\"} src={`https://ipfs.infura.io/ipfs/${this.props.post.hash}`} />\n                </MainImage>\n                <Footer>\n                    <Actions>\n                        <TipButton src={payIcon} onClick={(event) => { this.tip() }} />\n                    </Actions>\n                    <Description>\n                        {this.props.post.description}\n                    </Description >\n                    <TipsInformation>\n                        <p>Tips: {new Web3(window.ethereum).utils.fromWei(this.props.post.tipAmount.toString(), 'Ether')} ETH</p>\n                    </TipsInformation>\n                </Footer>\n            </StyledPost>\n        )\n    }\n\n}\n\nexport default Post;","import styled from 'styled-components'\n\nexport const StyledLoadMoreButton = styled.button`\n    border: none;\n    box-shadow: 0 0 10px rgba(0,0,0,0.15);\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: 700;\n    padding: 15px 60px;\n    background-color: #0095f6;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    border-radius: 50px;\n    color: white;\n    \n&:hover{\n    opacity: 0.9;\n    transform: scale(0.98)\n}\n\n`","import React from \"react\";\nimport { StyledLoadMoreButton } from \"./LoadMoreButton.styled\";\n\nexport default function LoadMoreButton(props) {\n\n\n    if (props.visible && !props.isLoading) {\n        return (\n            <StyledLoadMoreButton onClick={(event) => { props.loadMorePosts() }}>\n                Load More\n            </StyledLoadMoreButton>\n        )\n    }\n    else if ((props.visible && props.isLoading)) {\n        return (\n            <StyledLoadMoreButton  >\n                Loading...\n            </StyledLoadMoreButton>\n        )\n    }\n    else {\n        return (null)\n    }\n\n}","import React, { Component } from 'react';\nimport { StyledPostList } from './PostList.styled';\nimport Post from '../Post/Post';\nimport LoadMoreButton from '../LoadMoreButton/LoadMoreButton';\n\n\nclass PostList extends Component {\n\n\n\n    render() {\n        return (this.getRender())\n\n    }\n\n\n    getRender() {\n        if (this.props.posts != null) {\n            return (\n                <StyledPostList>\n                    {this.props.posts.map((post, key) => {\n                        return <Post state={this.props.state} post={post} key={key} />\n                    })}\n                    <LoadMoreButton isLoading={this.props.isLoading} loadMorePosts={this.props.loadMorePosts} visible={this.props.morePostsAvailable} />\n                </StyledPostList>\n            )\n        }\n        else {\n            return null\n        }\n\n\n\n    }\n}\nexport default PostList;\n\n","import React, { Component } from 'react';\nimport { loadPosts } from '../../utilities/helpers/PostLoader.js';\nimport Loader from '../Loader/Loader.js';\nimport { getPostCreatedSubscriptionEvent, getPostTippedSubscriptionEvent } from '../../api/BlockchainApi.js';\nimport { parseNewPostEvent, parseNewPostTippedEvent } from '../../utilities/helpers/Parser';\nimport { StyledPostsMainView } from './PostsMainView.styled.js';\nimport Information from './Information/Information.js';\nimport PostList from './PostList/PostList.js';\nimport { MetamaskStatus } from '../../App.js';\n\nclass PostsMainView extends Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            posts: null,\n            morePostsAvailable: false,\n            isLoading: false\n        }\n        this.loadMorePosts = this.loadMorePosts.bind(this)\n    }\n\n    postCreatedEvents = null\n    postTippedEvents = null\n\n    prevProps = {\n        state: {\n            account: ''\n        }\n    }\n\n    componentDidMount() {\n        this.postCreatedEvents = getPostCreatedSubscriptionEvent()\n        this.postCreatedEvents.on('data', newPostEvent => {\n            const newPost = parseNewPostEvent(newPostEvent)\n            const postAlreadyExists = this.state.posts.find(post => post.id === newPost.id)\n            if (!postAlreadyExists) {\n                this.setState({ posts: [...[newPost], ...this.state.posts] })\n            }\n            else {\n                console.log(\"Post already in list\")\n            }\n        })\n\n        this.postTippedEvents = getPostTippedSubscriptionEvent()\n        this.postTippedEvents.on('data', newPostTippedEvent => {\n            const newPostTipped = parseNewPostTippedEvent(newPostTippedEvent)\n            const postIndex = this.state.posts.findIndex((post) => post.id === newPostTipped.id)\n            if (postIndex !== -1) {\n                this.setState(({ posts }) => ({\n                    posts: [\n                        ...posts.slice(0, postIndex),\n                        {\n                            ...posts[postIndex],\n                            tipAmount: newPostTipped.tipAmount,\n                        },\n                        ...posts.slice(postIndex + 1)\n                    ]\n                }));\n            }\n            else {\n                console.log(\"Post already in list\")\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.postCreatedEvents.unsubscribe(function (error, success) {\n            if (success)\n                console.log('Successfully unsubscribed!');\n        });\n        this.postTippedEvents.unsubscribe(function (error, success) {\n            if (success)\n                console.log('Successfully unsubscribed!');\n        });\n    }\n\n    componentDidUpdate() {\n        console.log(this.props.state)\n        if (this.props.state.account && (this.props.state.account !== this.prevProps.state.account)) {\n            this.loadMorePosts()\n            console.log(this.props.state)\n        }\n        this.prevProps = this.props\n    }\n\n\n    loadMorePosts() {\n        this.setState({ isLoading: true })\n        console.log(\"Loading posts\")\n        loadPosts().then(result => {\n            console.log(result)\n            this.updateNewPosts(result)\n\n        }).catch(error => {\n            console.log(error)\n            this.setState({ isLoading: false })\n        })\n    }\n\n    updateNewPosts(newPosts) {\n        var morePostsAvailable\n\n        console.log(newPosts)\n        if (newPosts.length === 0 || newPosts[newPosts.length - 1].id === \"1\") {\n            morePostsAvailable = false\n        }\n        else {\n            morePostsAvailable = true\n        }\n\n        if (this.state.posts === null) {\n            this.setState({ morePostsAvailable, posts: newPosts, isLoading: false })\n        }\n        else {\n            this.setState({ morePostsAvailable, posts: [...this.state.posts, ...newPosts], isLoading: false })\n        }\n    }\n\n    render() {\n        if (this.props.state.metamaskStatus === MetamaskStatus.Ready) {\n            return (\n                <StyledPostsMainView>\n                    <Loader visible={this.state.posts === null} />\n                    <Information visible={this.state.posts != null && this.state.posts.length === 0} />\n                    <PostList isLoading={this.state.isLoading} loadMorePosts={this.loadMorePosts} state={this.props.state} posts={this.state.posts} morePostsAvailable={this.state.morePostsAvailable} />\n                </StyledPostsMainView>\n            );\n        }\n        else {\n            return null\n        }\n    }\n\n}\nexport default PostsMainView;\n\n","export function parseNewPostEvent(newPostEvent) {\n    console.log(\"New post created event:\", newPostEvent)\n    const newPost = {\n        author: newPostEvent.returnValues.author,\n        description: newPostEvent.returnValues.description,\n        hash: newPostEvent.returnValues.hash,\n        id: newPostEvent.returnValues.id,\n        isVideo: newPostEvent.returnValues.isVideo,\n        tipAmount: newPostEvent.returnValues.tipAmount\n    }\n\n    return newPost\n\n}\n\nexport function parseNewPostTippedEvent(newPostTippedEvent) {\n\n    console.log(\"New post tipped event:\", newPostTippedEvent)\n    const newPostTipped = {\n        author: newPostTippedEvent.returnValues.author,\n        description: newPostTippedEvent.returnValues.description,\n        hash: newPostTippedEvent.returnValues.hash,\n        id: newPostTippedEvent.returnValues.id,\n        isVideo: newPostTippedEvent.returnValues.isVideo,\n        tipAmount: newPostTippedEvent.returnValues.tipAmount\n    }\n\n    return newPostTipped\n\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar.js'\nimport BlockchainConnectionManager from './utilities/helpers/BlockchainConnectionManager'\nimport { StyledApp } from './App.styled';\nimport ConnectView from './components/ConnectView/ConnectView';\nimport PostsMainView from './components/PostsMainView/PostsMainView';\n\n\nexport const MetamaskStatus = {\n  Idle: 0,\n  NotInstalled: 1,\n  WrongNetwork: 2,\n  NotConnected: 3,\n  Ready: 4\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      metamaskStatus: MetamaskStatus.Idle,\n      morePostsAvailable: false\n    }\n\n\n\n\n    this.updateState = this.updateState.bind(this)\n    this.connectWallet = this.connectWallet.bind(this);\n    this.switchNetwork = this.switchNetwork.bind(this);\n\n\n  }\n\n  async componentDidMount() {\n    this.blockchainConnectionManager = new BlockchainConnectionManager(this.updateState);\n    this.blockchainConnectionManager.validate()\n\n  }\n\n  connectWallet() {\n    this.blockchainConnectionManager.connectWallet()\n  }\n\n  switchNetwork() {\n    this.blockchainConnectionManager.switchNetwork()\n  }\n\n  updateState(newState) {\n    this.setState(newState);\n  }\n\n\n  render() {\n    return (\n      <StyledApp>\n        <Navbar notifications={this.state.notifications} updateState={this.updateState} state={this.state} switchNetwork={this.switchNetwork} />\n        <ConnectView state={this.state} connectWallet={this.connectWallet} switchNetwork={this.switchNetwork} />\n        <PostsMainView updateState={this.updateState} state={this.state} />\n      </StyledApp>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c41904a6.png\";","//Declare IPFS\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\n\nexport async function uploadResource(resource) {\n\n    console.log(\"Submitting file to ipfs...\")\n    var result = await ipfs.add(resource)\n\n    return result[0].hash\n    // await ipfs.add(resource, (error, result) => {\n\n\n    //     if (error) {\n    //         console.error(error)\n    //         // return error\n    //         console.log('Error uploading to IPFS', result)\n    //         return error\n    //     }\n\n    //     console.log('Succesfully uploaded to IPFS', result)\n    //     return (result[0].hash)\n\n    // })\n\n\n\n}\n\n","\nimport { getPostCount, getPostById, createContractPost } from '../../api/BlockchainApi';\nimport { uploadResource } from '../../api/IPFSApi';\n\nvar latestLoadedPost = 0;\n\nexport async function loadPosts() {\n\n    var postCount = await getPostCount()\n    if (!postCount) {\n        return (\"Error getting postCount\")\n    }\n\n    postCount = parseInt(postCount, 10)\n    var postArray = []\n\n    if (latestLoadedPost === 1) {\n        console.log(\"There are no more posts available\")\n        return []\n    }\n    else if (postCount === 0) {\n        console.log(\"There are no posts to load\")\n        return []\n    }\n    else if (latestLoadedPost === 0) {\n        console.log(\"Loading posts form \" + postCount + \" to \" + (postCount - 4).toString())\n        latestLoadedPost = postCount + 1\n    }\n    else {\n        console.log(\"Loading posts form \" + (latestLoadedPost - 1).toString() + \" to \" + (latestLoadedPost - 5).toString())\n    }\n\n    var postsSuccesfullyLoaded = 0\n    for (var i = latestLoadedPost - 1; i > 0 && i > latestLoadedPost - 6; i--) {\n        const post = await getPostById(i)\n        if (!post) {\n            return Error(\"Error getting post info\")\n        }\n        postArray.push(post)\n        postsSuccesfullyLoaded++\n    }\n\n    latestLoadedPost = latestLoadedPost - postsSuccesfullyLoaded\n    return (postArray)\n}\n\n\nexport async function createPost(account, imageBuffer, description) {\n\n    var imageHash = await uploadResource(imageBuffer)\n\n    if (imageHash) {\n        console.log(\"var result = await createContractPost(imageHash, description, account)\")\n        return createContractPost(imageHash, description, account)\n    }\n    else {\n        return imageHash\n    }\n}\n\n\n\n\n\n// latestLoadedPost = 0\n\n// constructor(updateState, onPostLoaded, onNewPostCreated) {\n//     this.updateState = updateState\n//     this.onPostLoaded = onPostLoaded\n//     this.onNewPostCreated = onNewPostCreated\n//     this.setPostCreatedEventListener(this.onNewPostCreated)\n// }\n\n","module.exports = __webpack_public_path__ + \"static/media/new_post_icon.76be49c9.svg\";","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { createPost } from '../../utilities/helpers/PostLoader';\nimport SelectImageView from './view/SelectImageView/SelectImageView';\nimport AddDescriptionView from './view/AddDescriptionView/AddDescriptionView';\nimport WaitingForTransactionView from './view/WaitingForTransactionView/WaitingForTransactionView';\n\nexport const ModalStatus = {\n    Idle: 0,\n    ImageSelected: 1,\n    DescriptionReady: 2,\n    WaitingForMetamask: 3,\n}\n\n\nclass ShareModal extends Component {\n\n\n    buffer = ''\n    description = \"\"\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            status: ModalStatus.Idle,\n            title: 'Create new post',\n            imagePreview: \"\"\n        }\n        this.description = \"\"\n        this.upload = this.upload.bind(this)\n    }\n\n\n    captureFile = event => {\n\n\n        event.preventDefault()\n        const file = event.target.files[0]\n\n\n        const imagePreview = URL.createObjectURL(event.target.files[0])\n        const reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n\n        reader.onloadend = () => {\n            this.buffer = Buffer(reader.result)\n            this.setState({ status: ModalStatus.ImageSelected, title: 'Add a description', imagePreview })\n        }\n    }\n\n    upload(description) {\n        this.setState({ status: ModalStatus.WaitingForMetamask, title: \"Waiting for transaction\" })\n        createPost(this.props.state.account, this.buffer, description)\n            .then(result => {\n                this.onModalHide()\n            })\n            .catch(error => {\n\n            })\n    }\n\n    onModalHide() {\n        this.setState({ status: ModalStatus.Idle })\n        this.props.setModalState(false)\n    }\n\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={() => this.onModalHide()}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered >\n                {this.getScreen()}\n            </Modal >\n        )\n    }\n\n    getScreen() {\n        if (this.state.status === ModalStatus.Idle) {\n            return <SelectImageView state={this.state} captureFile={this.captureFile} />\n        }\n        else if (this.state.status === ModalStatus.ImageSelected) {\n            return <AddDescriptionView state={this.state} upload={this.upload} />\n        }\n        else if (this.state.status === ModalStatus.WaitingForMetamask) {\n            return <WaitingForTransactionView state={this.state} />\n        }\n    }\n}\nexport default ShareModal;\n\n\n","module.exports = __webpack_public_path__ + \"static/media/images_icon.fd6c2f7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/paid_black_24dp.240b0ccd.svg\";","import styled from 'styled-components'\n\nexport const StyledSelectImageView = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 500px;\n`\nexport const Title = styled.p`\n    \n    padding: 10px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    border-bottom: 1px solid rgba(var(--b6a,219,219,219),1);\n    font-weight: 500;\n    font-size: 14px;\n`\n\n\nexport const Image = styled.div`\n    height: 150px;\n    width: 100%;\n    margin-top: 75px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    img {\n        transform: scale(0.19);\n        border: none;\n    }\n`\n\nexport const Button = styled.button`\n    align-self: center;\n    color: white;\n    padding: 5px;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0,0,0,0.15);\n    cursor: pointer;\n    font-size: 14px;\n    background-color: #0095f6;\n    border: none;\n\n    &:hover{\n        opacity: 0.9;\n        transform: scale(0.98)\n    }\n\n`\n\n\n\n\n","import React, { Component } from 'react';\nimport { StyledSelectImageView, Title, Image, Button } from './SelectImageView.styled';\nimport imagesIcon from '../../../../assets/images_icon.svg'\n\nclass SelectImageView extends Component {\n\n    render() {\n        return (\n            <StyledSelectImageView>\n                <Title>\n                    {this.props.state.title}\n                </Title>\n                <Image>\n                    <img alt='description' src={imagesIcon} />\n                </Image>\n                <input ref={(input) => (this.inputElement = input)} id=\"selectFile\" type='file' accept=\".jpg, .jpeg, .png, .bmp\" style={{ display: 'none' }} onChange={this.props.captureFile} />\n                <Button onClick={() => this.inputElement.click()} >Select from hard drive</Button>\n            </StyledSelectImageView >\n\n        )\n    }\n}\nexport default SelectImageView;\n// ref={(input) => (this.inputElement = input)} ","import styled from 'styled-components'\n\nexport const StyledAddDescriptionView = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 500px;\n`\nexport const Title = styled.p`\n    \n    padding: 10px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    border-bottom: 1px solid rgba(var(--b6a,219,219,219),1);\n    font-weight: 500;\n    font-size: 14px;\n`\n\nexport const Image = styled.div`\n    height: 150px;\n    width: 100%;\n    margin-top: 75px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n`\n\nexport const Body = styled.div`\n    height: 250px;\n    width: 100%;\n    margin-top: 75px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n\n    img {\n        \n        width: 300px;\n        border: none;\n        background-color: purple;\n    }\n\n    textarea {\n        height: 250px;\n        width: 250px;\n        resize: none;\n    }\n`\n\nexport const Button = styled.button`\n    align-self: center;\n    color: white;\n    padding: 5px;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0,0,0,0.15);\n    cursor: pointer;\n    font-size: 14px;\n    background-color: #0095f6;\n    border: none;\n    margin-top: 30px;\n    &:hover{\n        opacity: 0.9;\n        transform: scale(0.98)\n    }\n\n`","import React, { Component } from 'react';\nimport { StyledAddDescriptionView, Title, Body, Button } from './AddDescriptionView.styled';\n\n\nclass AddDescriptionView extends Component {\n\n    description = \"\";\n\n    handleChange = event => {\n\n        this.description = event.target.value\n    }\n\n\n    render() {\n        return (\n            <StyledAddDescriptionView>\n                <Title>\n                    {this.props.state.title}\n                </Title>\n                <Body>\n                    <img alt='preview' src={this.props.state.imagePreview} />\n                    <textarea onChange={this.handleChange}></textarea>\n                </Body>\n                <Button onClick={() => this.props.upload(this.description)}>Create post</Button>\n\n            </StyledAddDescriptionView >\n        )\n    }\n}\nexport default AddDescriptionView;","\n\nimport styled from 'styled-components'\n\nexport const StyledWaitingForTransactionView = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 500px;\n\n    h4 {\n        align-self: center;\n        margin-top: 140px;\n    }\n`\n\nexport const Title = styled.p`\n    \n    padding: 10px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    border-bottom: 1px solid rgba(var(--b6a,219,219,219),1);\n    font-weight: 500;\n    font-size: 14px;\n`\n\nexport const Button = styled.button`\n    align-self: center;\n    color: white;\n    padding: 5px;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0,0,0,0.15);\n    cursor: pointer;\n    font-size: 14px;\n    background-color: #0095f6;\n    border: none;\n    margin-top: 30px;\n    &:hover{\n        opacity: 0.9;\n        transform: scale(0.98)\n    }\n\n`\n","import React, { Component } from 'react';\nimport { StyledWaitingForTransactionView, Title } from './WaitingForTransactionView.styled';\n\nclass WaitingForTransactionView extends Component {\n\n\n    render() {\n        return (\n            <StyledWaitingForTransactionView>\n                <Title>\n                    {this.props.state.title}\n                </Title>\n                <h4>You need to approve the transaction, please check metamask</h4>\n            </StyledWaitingForTransactionView >\n        )\n    }\n}\nexport default WaitingForTransactionView;","\nimport Decentragram from '../abis/Decentragram.json'\nimport * as Constants from '../utilities/Constants';\nimport Web3 from 'web3';\n\n\nconst mainContract = new (new Web3(window.ethereum)).eth.Contract(Decentragram.abi, Constants.DecentragramContractAddress)\n\n\n\n\n\n\nexport function getPostTippedSubscriptionEvent() {\n    return mainContract.events.PostTipped()\n}\n\n\nexport function getPostCreatedSubscriptionEvent() {\n    return mainContract.events.PostCreated()\n}\n\n\nexport async function getPostById(id) {\n    const post = await mainContract.methods.posts(id).call()\n    if (post) {\n        return (post)\n    }\n    else {\n        return (\"Error fetching post\")\n    }\n\n};\n\nexport async function getPostCount() {\n    var postCount = await mainContract.methods.postCount().call()\n    console.log(postCount)\n    if (postCount) {\n        return (postCount)\n    }\n    else {\n        return (\"Error fetching postCount\")\n    }\n};\n\nexport async function createContractPost(imageHash, description, account) {\n\n    return new Promise((resolve, reject) => {\n        mainContract.methods.createPost(imageHash, description).send({ from: account })\n            .on('transactionHash', (transactionHash) => {\n                console.log('Transaction sent with hash: ', transactionHash)\n                resolve(transactionHash)\n            })\n            .on('error', (error) => {\n                reject(error)\n            })\n    })\n\n\n\n}\n\nexport async function tipPostOwner(id, tipAmount, account) {\n    var tipResult = mainContract.methods.tipPostOwner(id).send({ from: account, value: tipAmount })\n\n    return tipResult\n}\n","\n\n\nconst DecentragramContractAddressRopsten = \"0xf36994d7cbaB301d53428024d5C8C59e05c27F87\".toString();\nconst ropstenChainId = 3;\nconst ropstenChainIdHexa = \"0x3\";\n\nconst DecentragramContractAddressDevelop = \"\".toString();\nconst developChainId = \"1337\";\nconst developChainIdHexa = \"0x539\";\n\n\n\n\nexport const DecentragramContractAddress = DecentragramContractAddressRopsten;\nexport const ChainId = ropstenChainId;\nexport const ChainIdHexa = ropstenChainIdHexa;"],"sourceRoot":""}